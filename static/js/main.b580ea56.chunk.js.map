{"version":3,"sources":["context/starContext.js","components/Table.jsx","components/Header.jsx","context/starProvider.js","App.js","index.js"],"names":["StarContext","React","createContext","Table","values","useContext","data","filteredData","filter","headers","rows","filterByName","name","map","planet","header","i","key","row","cell","index","Header","searchInput","setNumeric","searchPopulation","searchOrbitalPeriod","searchDiameter","searchRotationPeriod","searchSurfaceWater","selectColumn","selectComparison","selectValue","setSelectColumn","setSelectComparison","setSelectValue","comparisonArray","columnArray","setData","comparisonFilterArray","filterByNumericValues","el","comparison","type","id","data-testid","onChange","event","target","value","placeholder","onClick","slice","StarProvider","children","useState","setFilteredData","column","setFilter","useEffect","a","fetch","planets","json","results","forEach","result","residents","planetApi","filtered","toLowerCase","includes","nameFilter","push","Number","population","orbital_period","diameter","rotation_period","surface_water","Provider","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b580ea56.chunk.js","sourcesContent":["import React from 'react';\n\nconst StarContext = React.createContext();\nexport default StarContext;\n","import React, { useContext } from 'react';\nimport StarContext from '../context/starContext';\n\n// ferramenta utilizada como base: https://www.tablesgenerator.com/\nfunction Table() {\n  const values = useContext(StarContext);\n  const { data,\n    filteredData,\n    filter } = values;\n  const headers = ['name',\n    'rotation_period',\n    'orbital_period',\n    'diameter',\n    'climate',\n    'gravity',\n    'terrain',\n    'surface_water',\n    'population',\n    'films',\n    'created',\n    'edited',\n    'url'];\n  const planets = filter.filterByName.name === '' ? data : filteredData;\n  const rows = planets.map((planet) => headers.map((header) => planet[header])); // Aux√≠lio de Marcello Alves\n  return (\n    <table>\n      <thead>\n        <tr>\n          { headers.map((header, i) => (<th key={ i }>{header}</th>)) }\n        </tr>\n      </thead>\n      <tbody>\n        {rows.map((row, i) => (\n          <tr key={ i }>\n            {row.map((cell, index) => (\n              <td key={ index }>{cell}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\n//  <th>name</th>\n//     <th>rotation_period</th>\n//     <th>orbital_period</th>\n//     <th>diameter</th>\n//     <th>climate</th>\n//     <th>gravity</th>\n//     <th>terrain</th>\n//     <th>surface_water</th>\n//     <th>population</th>\n//     <th>films</th>\n//     <th>created</th>\n//     <th>edited</th>\n//     <th>url</th>\nexport default Table;\n","import React, { useContext } from 'react';\nimport StarContext from '../context/starContext';\n\nexport default function Header() {\n  const values = useContext(StarContext);\n  const { searchInput,\n    setNumeric,\n    searchPopulation,\n    searchOrbitalPeriod,\n    searchDiameter,\n    searchRotationPeriod,\n    searchSurfaceWater,\n    selectColumn,\n    selectComparison,\n    selectValue,\n    setSelectColumn,\n    setSelectComparison,\n    setSelectValue,\n    comparisonArray,\n    columnArray,\n    filter,\n    data,\n    setData } = values;\n\n  const comparisonFilterArray = filter.filterByNumericValues.map((el) => el.comparison);\n\n  return (\n    <div>\n      <h1>Star Wars Planet Search</h1>\n      <input\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        data-testid=\"name-filter\"\n        onChange={ (event) => searchInput(event.target.value) }\n      />\n      <select\n        name=\"filtros\"\n        id=\"filtros\"\n        data-testid=\"column-filter\"\n        onChange={ ({ target }) => {\n          setSelectColumn(target.value);\n        } }\n      >\n\n        {columnArray.map((el) => {\n          if (el !== selectColumn) {\n            return <option value={ el }>{el}</option>;\n          } return 'error';\n        })}\n      </select>\n      <select\n        name=\"filtros\"\n        id=\"filtros\"\n        data-testid=\"comparison-filter\"\n        onChange={ ({ target }) => {\n          setSelectComparison(target.value);\n        } }\n      >\n\n        {comparisonArray.map((el, i) => {\n          if (el !== comparisonFilterArray[i]) {\n            return <option value={ el }>{el}</option>;\n          } return 'error';\n        })}\n      </select>\n\n      <input\n        type=\"number\"\n        name=\"name\"\n        id=\"name\"\n        value={ selectValue }\n        placeholder=\"0\"\n        data-testid=\"value-filter\"\n        onChange={ ({ target }) => {\n          setSelectValue(target.value);\n        } }\n      />\n\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ () => {\n          if (selectColumn === 'population' && selectValue !== 0) {\n            searchPopulation(selectColumn, selectComparison, selectValue);\n            setNumeric(selectColumn, selectComparison, selectValue);\n          } else\n          if (selectColumn === 'orbital_period') {\n            searchOrbitalPeriod(selectColumn, selectComparison, selectValue);\n            setNumeric(selectColumn, selectComparison, selectValue);\n          } else\n          if (selectColumn === 'rotation_period') {\n            searchRotationPeriod(selectColumn, selectComparison, selectValue);\n            setNumeric(selectColumn, selectComparison, selectValue);\n          } else\n          if (selectColumn === 'diameter') {\n            searchDiameter(selectColumn, selectComparison, selectValue);\n            setNumeric(selectColumn, selectComparison, selectValue);\n          } else\n          if (selectColumn === 'surface_water') {\n            searchSurfaceWater(selectColumn, selectComparison, selectValue);\n            setNumeric(selectColumn, selectComparison, selectValue);\n          } else (setData(data.slice(2)));\n        } }\n      >\n        filtrar\n\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport StarContext from './starContext';\n\nexport default function StarProvider({ children }) {\n  const [data, setData] = useState([{}]);\n  const [selectColumn, setSelectColumn] = useState('');\n  const [selectComparison, setSelectComparison] = useState('');\n  const [selectValue, setSelectValue] = useState(0);\n  const [filteredData, setFilteredData] = useState([{}]);\n  const [comparisonArray] = useState(['maior que', 'menor que', 'igual a']);\n  const [columnArray] = useState(['population', 'rotation_period',\n    'orbital_period', 'diameter', 'surface_water']);\n  const [filter, setFilter] = useState({\n    filterByName: {\n      name: '',\n    },\n    filterByNumericValues: [\n      {\n        column: '',\n        comparison: '',\n        value: 0,\n      },\n    ],\n  });\n\n  useEffect(() => {\n    const planetApi = async () => {\n      const planets = await fetch('https://swapi.dev/api/planets/');\n      let results = await planets.json();\n      results = results.results;\n      results.forEach((result) => {\n        delete result.residents;\n      });\n      setData(results);\n      setFilteredData(results);\n    };\n    planetApi();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    function nameFilter() {\n      if (filter.filterByName.name !== '') {\n        const filtered = data.filter((planet) => (planet.name.toLowerCase() // refer√™ncia: https://stackoverflow.com/questions/42035717/js-filter-object-array-for-partial-matches/42035745\n          .includes(filter.filterByName.name.toLowerCase())));\n        setFilteredData(filtered);\n      }\n    }\n    nameFilter();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filter]);\n\n  function searchInput(name) {\n    setFilter({\n      ...filter, filterByName: { name },\n    });\n  }\n\n  function setNumeric(column, comparison, value) {\n    filter.filterByNumericValues.push({\n      column,\n      comparison,\n      value,\n    });\n  }\n\n  function searchPopulation(column, comparison, value) {\n    if (comparison === 'maior que') {\n      const filtered = data.filter((planet) => (Number(planet.population) > value));\n      setData(filtered);\n    } else if (comparison === 'menor que') {\n      const filtered = data.filter((planet) => (Number(planet.population) < value));\n      setData(filtered);\n    } else if (comparison === 'igual a') {\n      const filtered = data.filter((planet) => (planet.population === value));\n      setData(filtered);\n    } else (setData(data.slice(2)));\n  }\n\n  function searchOrbitalPeriod(column, comparison, value) {\n    if (comparison === 'maior que') {\n      const filtered = data.filter((planet) => (Number(planet.orbital_period) > value));\n      setData(filtered);\n    } else\n    if (comparison === 'menor que') {\n      const filtered = data.filter((planet) => (Number(planet.orbital_period) < value));\n\n      setData(filtered);\n    } else\n    if (comparison === 'igual a') {\n      const filtered = data.filter((planet) => (planet.orbital_period === value));\n      setData(filtered);\n    } else (setData(data.slice(2)));\n  }\n\n  function searchDiameter(column, comparison, value) {\n    if (comparison === 'maior que') {\n      const filtered = data.filter((planet) => (Number(planet.diameter) > value));\n\n      setData(filtered);\n    } else\n    if (comparison === 'menor que') {\n      const filtered = data.filter((planet) => (Number(planet.diameter) < value));\n\n      setData(filtered);\n    } else\n    if (comparison === 'igual a') {\n      const filtered = data.filter((planet) => (planet.diameter === value));\n      setData(filtered);\n    } else (setData(data.slice(2)));\n  }\n\n  function searchRotationPeriod(column, comparison, value) {\n    if (comparison === 'maior que') {\n      const filtered = data.filter((planet) => (Number(planet.rotation_period) > value));\n      setData(filtered);\n    } else\n    if (comparison === 'menor que') {\n      const filtered = data.filter((planet) => (Number(planet.rotation_period) < value));\n      setData(filtered);\n    } else\n    if (comparison === 'igual a') {\n      const filtered = data.filter((planet) => (planet.rotation_period === value));\n      setData(filtered);\n    } else (setData(data.slice(2)));\n  }\n\n  function searchSurfaceWater(column, comparison, value) {\n    if (comparison === 'maior que') {\n      const filtered = data.filter((planet) => (Number(planet.surface_water) > value));\n      setData(filtered);\n    } else\n    if (comparison === 'menor que') {\n      const filtered = data.filter((planet) => (Number(planet.surface_water) < value));\n      setData(filtered);\n    } else\n    if (comparison === 'igual a') {\n      const filtered = data.filter((planet) => (planet.surface_water === value));\n      setData(filtered);\n    } else (setData(data.slice(2)));\n  }\n\n  const values = {\n    data,\n    setData,\n    filter,\n    setFilter,\n    searchInput,\n    setNumeric,\n    filteredData,\n    searchPopulation,\n    searchOrbitalPeriod,\n    searchDiameter,\n    searchRotationPeriod,\n    searchSurfaceWater,\n    selectColumn,\n    selectComparison,\n    selectValue,\n    setSelectColumn,\n    setSelectComparison,\n    setSelectValue,\n    comparisonArray,\n    columnArray,\n  };\n\n  return (\n    <div>\n      <main>\n        <StarContext.Provider value={ values }>\n          {children}\n        </StarContext.Provider>\n      </main>\n    </div>\n  );\n}\n\nStarProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport Table from './components/Table';\nimport Header from './components/Header';\nimport StarProvider from './context/starProvider';\n\nfunction App() {\n  return (\n    <StarProvider>\n      <Header />\n      <Table />\n    </StarProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}